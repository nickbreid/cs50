1.  What’s stdint.h?
Stdint.h is a header file that includes fixed-width integer types that enhance portability of programs.

2.  What’s the point of using uint8_t, uint32_t, int32_t, and uint16_t in a program?
These are all exact-width types and therefore are ensured to take up the same amount of space across implementaations --
that is, exactly N bits. The ones prepended by a 'u' represent unsigned integers and can't hold negative values.
So, uint32_t and int32_t each take up 32 bits. uint32_t can't hold a negative, but can hold a larger positive value.

3. How many bytes is a BYTE, a DWORD, a LONG, and a WORD, respectively?
1, 4, 4, and 2.

4. What (in ASCII, decimal, or hexadecimal) must the first two bytes of any BMP file be? Leading bytes used to identify file formats (with high probability) are generally called "magic numbers."
To signal that the file is a bitmap, the first two bites are an ASCII "B" following by an "M."

5. What’s the difference between bfSize and biSize?
bfSize represents the size of the entire bmp file. biSize represents the size of the BITMAPINFOHEADER structure.

6. What does it mean if biHeight is negative?
If biHeight is negative, the bitmap is considered "top-down" with its origin in the top-left.
Otherwise, it's considered "bottom-up" with its origin in the lower-left corner.

7. What field in BITMAPINFOHEADER specifies the BMP’s color depth (i.e., bits per pixel)?
biBitCount

8. Why might fopen return NULL in lines 24 and 32 of copy.c?
On line 24, it might return NULL if the file can't be read for some reason (it doesn't exist? lack of permissions?)
On line 32, it'll try to create a new file if one doesn't exist, but it can still fail for lack of permissions.

9. Why is the third argument to fread always 1 in our code?
The third argument to fread represents the number of elements to be read, and we're always reading one element at a time.

10. What value does line 65 of copy.c assign to padding if bi.biWidth is 3?
int padding =  (4 - (bi.biWidth * sizeof(RGBTRIPLE)) % 4) % 4;
= (4 - (3 * 3 % 4) % 4
= (4 - (9 % 4) % 4
= 4 - 1 % 4
= 4 - 1
= 3
This is the padding that will be added to the scanline to ensure it's divisible by 4.

11. What does fseek do?
fseek sets a pointer offset, allowing us to jump to a specific part of a file.

12. What is SEEK_CUR?
SEEK_CUR is the current position of the file pointer after the offset has been applied.